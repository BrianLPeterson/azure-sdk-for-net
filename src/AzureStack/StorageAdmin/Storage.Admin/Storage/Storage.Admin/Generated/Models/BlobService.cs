// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.AzureStack.Management.Storage.Admin.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// TODO
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class BlobService : Resource
    {
        /// <summary>
        /// Initializes a new instance of the BlobService class.
        /// </summary>
        public BlobService()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the BlobService class.
        /// </summary>
        /// <param name="id">URI of the resource.</param>
        /// <param name="name">Name of the resource.</param>
        /// <param name="type">Type of resource.</param>
        /// <param name="location">Location where resource is location.</param>
        /// <param name="tags">List of key value pairs.</param>
        /// <param name="version">TODO</param>
        /// <param name="healthStatus">Possible values include: 'Unknown',
        /// 'Healthy', 'Warning', 'Critical'</param>
        /// <param name="settings">TODO</param>
        public BlobService(string id = default(string), string name = default(string), string type = default(string), string location = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), string version = default(string), string healthStatus = default(string), BlobServiceSettings settings = default(BlobServiceSettings))
            : base(id, name, type, location, tags)
        {
            Version = version;
            HealthStatus = healthStatus;
            Settings = settings;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets TODO
        /// </summary>
        [JsonProperty(PropertyName = "properties.version ")]
        public string Version { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'Unknown', 'Healthy',
        /// 'Warning', 'Critical'
        /// </summary>
        [JsonProperty(PropertyName = "properties.healthStatus")]
        public string HealthStatus { get; set; }

        /// <summary>
        /// Gets or sets TODO
        /// </summary>
        [JsonProperty(PropertyName = "properties.settings")]
        public BlobServiceSettings Settings { get; set; }

    }
}
